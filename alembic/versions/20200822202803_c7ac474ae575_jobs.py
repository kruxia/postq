"""jobs

Revision ID: c7ac474ae575
Revises: 7e8956a72cf2
Create Date: 2020-08-22 20:28:03.063821+00:00

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = 'c7ac474ae575'
down_revision = '7e8956a72cf2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'jobs',
        sa.Column(
            'id',
            postgresql.UUID(),
            server_default=sa.text('gen_random_uuid()'),
            nullable=False,
            comment='autogenerated (UUID) primary key',
        ),
        sa.Column(
            'qname',
            sa.String(),
            nullable=True,
            comment='name of the queue, if any, to which this job is assigned',
        ),
        sa.Column(
            'retries',
            sa.SmallInteger(),
            server_default=sa.text('1'),
            nullable=True,
            comment='number of retries remaining to do for this job',
        ),
        sa.Column(
            'queued',
            sa.DateTime(timezone=True),
            server_default=sa.text('current_timestamp'),
            nullable=False,
            comment='timestamp when the job was queued',
        ),
        sa.Column(
            'scheduled',
            sa.DateTime(timezone=True),
            server_default=sa.text('current_timestamp'),
            nullable=False,
            comment='timestamp when the job is scheduled',
        ),
        sa.Column(
            'tasks',
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            nullable=True,
            comment='definition (DAG) of the tasks to be done',
        ),
        sa.Column(
            'data',
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            nullable=True,
            comment='data for the tasks to consume / produce',
        ),
        sa.PrimaryKeyConstraint('id'),
        schema='postq',
    )
    op.create_table(
        'jobs_log',
        sa.Column(
            'id',
            postgresql.UUID(),
            nullable=True,
            comment='(UUID) primary key from the jobs table',
        ),
        sa.Column(
            'qname',
            sa.String(),
            nullable=True,
            comment='name of the queue, if any, to which this job was assigned',
        ),
        sa.Column(
            'retries',
            sa.SmallInteger(),
            nullable=True,
            comment='number of retries remaining to do for this job',
        ),
        sa.Column(
            'queued',
            sa.DateTime(timezone=True),
            nullable=False,
            comment='timestamp when the job was queued',
        ),
        sa.Column(
            'scheduled',
            sa.DateTime(timezone=True),
            nullable=False,
            comment='timestamp when the job was scheduled',
        ),
        sa.Column(
            'completed',
            sa.DateTime(timezone=True),
            server_default=sa.text('current_timestamp'),
            nullable=False,
            comment='timestamp when the job was completed',
        ),
        sa.Column(
            'tasks',
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            nullable=True,
            comment='definition (DAG) of the tasks to be done',
        ),
        sa.Column(
            'data',
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            nullable=True,
            comment='data for the tasks to consume / produce',
        ),
        sa.Column(
            'errors',
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'::jsonb"),
            nullable=True,
            comment='task errors that occurred while running the job',
        ),
        schema='postq',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs_log', schema='postq')
    op.drop_table('jobs', schema='postq')
    # ### end Alembic commands ###
